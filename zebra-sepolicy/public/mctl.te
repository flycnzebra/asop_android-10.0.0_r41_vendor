type mctl, domain;
type mctl_exec, system_file_type, exec_type, file_type;

allow mctl port:tcp_socket { bind name_bind node_bind name_connect };
allow mctl port:udp_socket { bind name_bind node_bind };
allow mctl mctl:tcp_socket { create read write getopt getattr bind name_bind node_bind accept listen shutdown connect };
allow mctl mctl:udp_socket { create read write getopt getattr bind name_bind node_bind accept listen shutdown connect };
allow mctl node:tcp_socket { bind name_bind node_bind name_connect };
allow mctl node:udp_socket { bind name_bind node_bind };
allow mctl mctl:capability { net_raw };
allow mctl fwmarkd_socket:sock_file { write };
allow mctl netd:unix_stream_socket { connectto };
allow mctl surfaceflinger:binder { call transfer };
allow mctl system_server:binder { call transfer };
allow mctl servicemanager:binder { call transfer };
allow mctl mediametrics:binder { call transfer };
allow mctl mediaserver:binder { call transfer };
allow mctl input_device:dir { getattr search };
allow mctl input_device:chr_file { open read write };
allow mctl system_file:file { execute_no_trans };
allow mctl shell_exec:file { getattr execute read open execute_no_trans };
allow mctl zygote_exec:file { getattr execute read open execute_no_trans };
allow mctl dalvikcache_data_file:dir { getattr search };
allow mctl dalvikcache_data_file:file { getattr read open lock };
allow mctl dalvikcache_data_file:lnk_file { getattr read open lock };
allow mctl mctl:process { execmem };
allow mctl ashmem_device:chr_file { execute };

allow netd mctl:fd { use };
allow netd mctl:tcp_socket { read write getopt setopt };
allow servicemanager mctl:dir { getattr search };
allow servicemanager mctl:file { getattr read open };
allow servicemanager mctl:process { getattr };
allow surfaceflinger mctl:binder { call transfer };
allow mediaserver mctl:binder { call transfer };

allow mctl hwservicemanager_prop:file { read open getattr };
allow mctl hwservicemanager_prop:binder { call };
allow mctl hidl_manager_hwservice:hwservice_manager { find };
#allow mctl hal_codec2_hwservice:hwservice_manager { find };

allow hwservicemanager mctl:binder { transfer };
